openapi: 3.0.3
info:
  title: Mia
  description: Movie and TV show tracker
  version: 0.1.0
servers:
  - url: 'http://localhost:3000'
paths:
  /ping:
    get:
      summary: Ping
      description: Test endpoint
      responses:
        200:
          description: OK
  /masterdata/refresh:
    post:
      summary: Refresh masterdata
      description: Refreshes masterdata
      responses:
        200:
          description: OK
        500:
          $ref: "#/components/responses/500"
  /users/register:
    post:
      summary: Registration
      description: Registers a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                username:
                  type: string
                password:
                  type: string
                password_repeat:
                  type: string
      responses:
        201:
          description: User successfully registered
        400:
          $ref: "#/components/responses/400"
        500:
          $ref: "#/components/responses/500"

  /users/login:
    post:
      summary: Login
      description: Generates an authentication token for user with provided credentials
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        200:
          description: Returns a valid authentication token for user with provided credentials
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  expiry_date:
                    type: string
        400:
          $ref: "#/components/responses/400"
        500:
          $ref: "#/components/responses/500"

  /media:
    get:
      summary: Media index
      description: Retrieves a paginated list of all user's tracked media sorted alphabetically
      security:
        - bearerAuth: []
      parameters:
        - name: offset
          in: query
          required: true
          schema:
            type: integer
        - name: limit
          in: query
          required: true
          schema:
            type: integer
      responses:
        200:
          description: A page of all user's tracked media sorted alphabetically
          content:
            application/json:
              schema:
                type: object
                properties:
                  title:
                    type: string
                  poster_path:
                    oneOf:
                      - type: string
                      - type: 'null'
                  stars:
                    oneOf:
                      - type: number
                        format: float
                      - type: 'null'
                  type:
                    type: string
                    enum: ["movie", "series"]
                  episode_count:
                    oneOf:
                      - type: integer
                      - type: 'null'
        400:
          $ref: "#/components/responses/400"
        500:
          $ref: "#/components/responses/500"
    post:
      summary: Media create
      description: Creates a new media
      security:
        - bearerAuth: [ ]
      parameters:
        - name: tmdb_id
          in: query
          required: true
          schema:
            type: integer
      responses:
        201:
          description: Media successfully created
        400:
          $ref: "#/components/responses/400"
        500:
          $ref: "#/components/responses/500"
components:
  responses:
    400:
      description: Provided parameters violate one or more requirements
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/apiErr"
    500:
      description: An unexpected error occurred while processing the request
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/apiErr"
  schemas:
    apiErr:
      type: array
      minItems: 1
      items:
        type: object
        properties:
          key:
            type: string
            enum:
              - InternalServerError
              - NoAuthenticationTokenProvided
              - InvalidAuthenticationToken

              - SignUpEmailEmpty
              - SignUpUsernameEmpty
              - SignUpPasswordEmpty
              - SignUpPasswordRepeatEmpty
              - SignUpEmailInvalid
              - SignUpAccountWithThisEmailAlreadyExists
              - SignUpUsernameAlreadyTaken
              - SignUpPasswordsDoNotMatch
              - SignUpPasswordRequirementsNotMet

              - LoginUsernameEmpty
              - LoginPasswordEmpty
              - LoginInvalidCredentials
          debug_message:
            type: string
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT